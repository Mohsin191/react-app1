{"version":3,"sources":["components/Home.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","text","setText","className","htmlFor","value","onChange","event","console","log","target","id","rows","onClick","newText","toUpperCase","split","length","Navbar","href","type","role","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAEe,SAASA,IACpB,IAUQ,EAAwBC,mBAAS,oBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACV,OACE,qCAAE,sBAAKC,UAAU,OAAf,UACI,uBAAOC,QAAQ,UAAUD,UAAU,aAAnC,kBACA,qBAAKA,UAAU,OAAf,SACA,0BAAUA,UAAU,wBAAwBE,MAAOJ,EAAMK,SAVxC,SAACC,GACpBC,QAAQC,IAAI,yBAEZP,EAAQK,EAAMG,OAAOL,QAOgEM,GAAG,UAAUC,KAAK,SACrG,wBAAQT,UAAU,uBAAuBU,QAhB5B,WACvBL,QAAQC,IAAI,aAAeR,GAC3B,IAAIa,EAAUb,EAAKc,cACnBb,EAAQY,IAaE,0BAEJ,sBAAKX,UAAU,iBAAf,UACE,mDACA,8BAAIF,EAAKe,MAAM,KAAKC,OAApB,cAAuChB,EAAKgB,OAA5C,uBCtBO,SAASC,IACtB,OAGA,qBAAKf,UAAU,mCAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAegB,KAAK,IAAjC,oBACA,wBAAQhB,UAAU,iBAAiBiB,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMjB,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BQ,GAAG,yBAA7C,UACE,oBAAIR,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkBgB,KAAK,IAApC,sBAMJ,uBAAMhB,UAAU,SAASkB,KAAK,SAA9B,UACE,uBAAOlB,UAAU,oBAAoBiB,KAAK,SAASE,YAAY,SAAS,aAAW,WACnF,wBAAQnB,UAAU,0BAA0BiB,KAAK,SAAjD,+BCDOG,MAXf,WACE,OACF,qCACG,cAACL,EAAD,IACA,qBAAKf,UAAU,qCAAf,SACH,cAAC,EAAD,UCHeqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3ed7f074.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport default function Form() {\r\n    const Changetoup = ()=>{\r\nconsole.log('Hi Clicked' + text)\r\nlet newText = text.toUpperCase();\r\nsetText(newText);\r\n    }\r\n    const handleOnchange = (event) => {\r\n        console.log(\"Uppercase was clicked\");\r\n       \r\n        setText(event.target.value);\r\n    }\r\n            const [text, setText] = useState('Enter Text here2');\r\n  return (\r\n    <><div className=\"mb-3\">\r\n          <label htmlFor=\"textbox\" className=\"form-label\">Home</label>\r\n          <div className=\"mb-1\">\r\n          <textarea className='form-Control col-md-8' value={text} onChange={handleOnchange} id='textbox' rows='10'  ></textarea></div>\r\n          <button className=\"btn btn-primary mt-2\" onClick={Changetoup}>Uppercase</button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1>Your text Summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n","import React from 'react'\r\nexport default function Navbar() {\r\n  return (\r\n\r\n             \r\n  <nav className=\"navbar navbar-expand-lg bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" href=\"/\">Form</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <link className=\"nav-link\" to=\"/about\">About</link>\r\n        </li> */}\r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n","import \"./App.css\";\nimport React from 'react'\n// import { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\n\n// import About from \"./components/About\";\n\n\n\nfunction App() {\n  return (\n<>\n   <Navbar />\n   <div className=\"container w-100 d-flex flex-column\">\n<Home/>\n   </div>\n   </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}